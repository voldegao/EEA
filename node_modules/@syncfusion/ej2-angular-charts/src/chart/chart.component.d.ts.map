{"version":3,"file":"chart.component.d.ts","sources":["chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, QueryList, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { Chart } from '@syncfusion/ej2-charts';\nimport { SeriesCollectionDirective } from './series.directive';\nimport { AxesDirective } from './axes.directive';\nimport { RowsDirective } from './rows.directive';\nimport { ColumnsDirective } from './columns.directive';\nimport { RangeColorSettingsDirective } from './rangecolorsettings.directive';\nimport { AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorsDirective } from './indicators.directive';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * Chart Component\n * ```html\n * <ejschart></ejschart>\n * ```\n */\nexport declare class ChartComponent extends Chart implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    context: any;\n    tagObjects: any;\n    childSeries: QueryList<SeriesCollectionDirective>;\n    childAxes: QueryList<AxesDirective>;\n    childRows: QueryList<RowsDirective>;\n    childColumns: QueryList<ColumnsDirective>;\n    childRangeColorSettings: QueryList<RangeColorSettingsDirective>;\n    childAnnotations: QueryList<AnnotationsDirective>;\n    childSelectedDataIndexes: QueryList<SelectedDataIndexesDirective>;\n    childIndicators: QueryList<IndicatorsDirective>;\n    tags: string[];\n    dataSourceChange: any;\n    tooltip_template: any;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}