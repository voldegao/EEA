{"version":3,"file":"series.directive.d.ts","sources":["series.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * AccumulationSeries Directive\n * ```html\n * <e-accumulation-series-collection>\n * <e-accumulation-series></e-accumulation-series>\n * </e-accumulation-series-collection>\n * ```\n */\nexport declare class AccumulationSeriesDirective extends ComplexBase<AccumulationSeriesDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * Specify the type of the series in accumulation chart.\n     * @default 'Pie'\n     */\n    type: any;\n    /**\n     * Options for customizing the animation for series.\n     */\n    animation: any;\n    /**\n     * Options for customizing the border of the series.\n     */\n    border: any;\n    /**\n     * The data label for the series.\n     */\n    dataLabel: any;\n    /**\n     * Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n     *\n     * @default ''\n     */\n    dataSource: any;\n    /**\n     * options to customize the empty points in series\n     */\n    emptyPointSettings: any;\n    /**\n     * To enable or disable tooltip for a series.\n     * @default true\n     */\n    enableTooltip: any;\n    /**\n     * End angle for a series.\n     * @default null\n     */\n    endAngle: any;\n    /**\n     * If set true, series points will be exploded on mouse click or touch.\n     * @default false\n     */\n    explode: any;\n    /**\n     * If set true, all the points in the series will get exploded on load.\n     * @default false\n     */\n    explodeAll: any;\n    /**\n     * Index of the point, to be exploded on load.\n     * @default null\n     * @aspdefaultvalueignore\n     * @blazordefaultvalue Double.NaN\n     */\n    explodeIndex: any;\n    /**\n     * Distance of the point from the center, which takes values in both pixels and percentage.\n     * @default '30%'\n     */\n    explodeOffset: any;\n    /**\n     * Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1\n     * @default 0\n     */\n    gapRatio: any;\n    /**\n     * AccumulationSeries y values less than groupMode are combined into single slice named others\n     * @default Value\n     */\n    groupMode: any;\n    /**\n     * AccumulationSeries y values less than groupTo are combined into single slice named others\n     * @default null\n     */\n    groupTo: any;\n    /**\n     * Defines the height of the funnel/pyramid with respect to the chart area\n     * @default '80%'\n     */\n    height: any;\n    /**\n     * When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\n     * @default '0'\n     */\n    innerRadius: any;\n    /**\n     * The URL for the Image that is to be displayed as a Legend icon.  It requires  `legendShape` value to be an `Image`.\n     * @default ''\n     */\n    legendImageUrl: any;\n    /**\n     * The shape of the legend. Each series has its own legend shape. They are\n     * * Circle - Renders a circle.\n     * * Rectangle - Renders a rectangle.\n     * * Triangle - Renders a triangle.\n     * * Diamond - Renders a diamond.\n     * * Cross - Renders a cross.\n     * * HorizontalLine - Renders a horizontalLine.\n     * * VerticalLine - Renders a verticalLine.\n     * * Pentagon - Renders a pentagon.\n     * * InvertedTriangle - Renders a invertedTriangle.\n     * * SeriesType -Render a legend shape based on series type.\n     * * Image -Render a image.     *\n     * @default 'SeriesType'\n     */\n    legendShape: any;\n    /**\n     * Specifies the series name\n     * @default ''\n     */\n    name: any;\n    /**\n     * Defines the height of the funnel neck with respect to the chart area\n     * @default '20%'\n     */\n    neckHeight: any;\n    /**\n     * Defines the width of the funnel neck with respect to the chart area\n     * @default '20%'\n     */\n    neckWidth: any;\n    /**\n     * The opacity of the series.\n     * @default 1.\n     */\n    opacity: any;\n    /**\n     * Palette for series points.\n     * @default []\n     */\n    palettes: any;\n    /**\n     * The DataSource field that contains the color value of point\n     * It is applicable for series\n     * @default ''\n     */\n    pointColorMapping: any;\n    /**\n     * Defines how the values have to be reflected, whether through height/surface of the segments\n     * @default 'Linear'\n     */\n    pyramidMode: any;\n    /**\n     * Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `ej.DataManager`.\n     * @default null\n     */\n    query: any;\n    /**\n     * Radius of the pie series and its values in percentage.\n     * @default '80%'\n     */\n    radius: any;\n    /**\n     * Custom style for the selected series or points.\n     * @default null\n     */\n    selectionStyle: any;\n    /**\n     * Start angle for a series.\n     * @default 0\n     */\n    startAngle: any;\n    /**\n     * The provided value will be considered as a Tooltip Mapping name\n     * @default ''\n     */\n    tooltipMappingName: any;\n    /**\n     * Specifies the series visibility.\n     * @default true\n     */\n    visible: any;\n    /**\n     * Defines the width of the funnel/pyramid with respect to the chart area\n     * @default '80%'\n     */\n    width: any;\n    /**\n     * The DataSource field which contains the x value.\n     * @default ''\n     */\n    xName: any;\n    /**\n     * The DataSource field which contains the y value.\n     * @default ''\n     */\n    yName: any;\n    dataLabel_template: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * AccumulationSeries Array Directive\n * @private\n */\nexport declare class AccumulationSeriesCollectionDirective extends ArrayBase<AccumulationSeriesCollectionDirective> {\n    constructor();\n}\n"]}