{"version":3,"file":"series.directive.d.ts","sources":["series.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * Series Directive\n * ```html\n * <e-stockchart-series-collection>\n * <e-stockchart-series></e-stockchart-series>\n * </e-stockchart-series-collection>\n * ```\n */\nexport declare class StockChartSeriesDirective extends ComplexBase<StockChartSeriesDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    childTrendlines: any;\n    tags: string[];\n    /**\n     * The type of the series are\n     * * Line\n     * * Column\n     * * Area\n     * * Spline\n     * * Hilo\n     * * HiloOpenClose\n     * * Candle\n     * @default 'Candle'\n     */\n    type: any;\n    /**\n     * Options to customizing animation for the series.\n     */\n    animation: any;\n    /**\n     * This property is used in stock charts to visualize the price movements in stock.\n     * It defines the color of the candle/point, when the opening price is less than the closing price.\n     * @default '#2ecd71'\n     */\n    bearFillColor: any;\n    /**\n     * Options to customizing the border of the series. This is applicable only for `Column` and `Bar` type series.\n     */\n    border: any;\n    /**\n     * This property is used in financial charts to visualize the price movements in stock.\n     * It defines the color of the candle/point, when the opening price is higher than the closing price.\n     * @default '#e74c3d'\n     */\n    bullFillColor: any;\n    /**\n     * It defines tension of cardinal spline types\n     * @default 0.5\n     */\n    cardinalSplineTension: any;\n    /**\n     * The DataSource field that contains the close value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    close: any;\n    /**\n     * To render the column series points with particular column spacing. It takes value from 0 - 1.\n     * @default 0\n     */\n    columnSpacing: any;\n    /**\n     * To render the column series points with particular column width. If the series type is histogram the\n     * default value is 1 otherwise 0.7.\n     * @default null\n     * @aspdefaultvalueignore\n     */\n    columnWidth: any;\n    /**\n     * To render the column series points with particular rounded corner.\n     */\n    cornerRadius: any;\n    /**\n     * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n     * @default '0'\n     */\n    dashArray: any;\n    /**\n     * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n     * @default ''\n     */\n    dataSource: any;\n    /**\n     * options to customize the empty points in series\n     */\n    emptyPointSettings: any;\n    /**\n     * This property is applicable for candle series.\n     * It enables/disables to visually compare the current values with the previous values in stock.\n     * @default false\n     */\n    enableSolidCandles: any;\n    /**\n     * If set true, the Tooltip for series will be visible.\n     * @default true\n     */\n    enableTooltip: any;\n    /**\n     * The fill color for the series that accepts value in hex and rgba as a valid CSS color string.\n     * It also represents the color of the signal lines in technical indicators.\n     * For technical indicators, the default value is 'blue' and for series, it has null.\n     * @default null\n     */\n    fill: any;\n    /**\n     * The DataSource field that contains the high value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    high: any;\n    /**\n     * The URL for the Image that is to be displayed as a Legend icon.  It requires  `legendShape` value to be an `Image`.\n     * @default ''\n     */\n    legendImageUrl: any;\n    /**\n     * The shape of the legend. Each series has its own legend shape. They are\n     * * Circle - Renders a circle.\n     * * Rectangle - Renders a rectangle.\n     * * Triangle - Renders a triangle.\n     * * Diamond - Renders a diamond.\n     * * Cross - Renders a cross.\n     * * HorizontalLine - Renders a horizontalLine.\n     * * VerticalLine - Renders a verticalLine.\n     * * Pentagon - Renders a pentagon.\n     * * InvertedTriangle - Renders a invertedTriangle.\n     * * SeriesType -Render a legend shape based on series type.\n     * * Image -Render a image.     *\n     * @default 'SeriesType'\n     */\n    legendShape: any;\n    /**\n     * The DataSource field that contains the low value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    low: any;\n    /**\n     * Options for displaying and customizing markers for individual points in a series.\n     */\n    marker: any;\n    /**\n     * The name of the series visible in legend.\n     * @default ''\n     */\n    name: any;\n    /**\n     * The opacity of the series.\n     * @default 1\n     */\n    opacity: any;\n    /**\n     * The DataSource field that contains the open value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    open: any;\n    /**\n     * The DataSource field that contains the color value of point\n     * It is applicable for series\n     * @default ''\n     */\n    pointColorMapping: any;\n    /**\n     * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n     * @default null\n     */\n    query: any;\n    /**\n     * Custom style for the selected series or points.\n     * @default null\n     */\n    selectionStyle: any;\n    /**\n     * The provided value will be considered as a Tooltip name\n     * @default ''\n     */\n    tooltipMappingName: any;\n    /**\n     * Defines the collection of trendlines that are used to predict the trend\n     */\n    trendlines: any;\n    /**\n     * Specifies the visibility of series.\n     * @default true\n     */\n    visible: any;\n    /**\n     * Defines the data source field that contains the volume value in candle charts\n     * It is applicable for financial series and technical indicators\n     * @default ''\n     */\n    volume: any;\n    /**\n     * The stroke width for the series that is applicable only for `Line` type series.\n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    width: any;\n    /**\n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart.\n     * It is applicable for series and technical indicators\n     * @default null\n     */\n    xAxisName: any;\n    /**\n     * The DataSource field that contains the x value.\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    xName: any;\n    /**\n     * The name of the vertical axis associated with the series. It requires `axes` of the chart.\n     * It is applicable for series and technical indicators\n     * @default null\n     */\n    yAxisName: any;\n    /**\n     * The DataSource field that contains the y value.\n     * @default ''\n     */\n    yName: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * StockChartSeries Array Directive\n * @private\n */\nexport declare class StockChartSeriesCollectionDirective extends ArrayBase<StockChartSeriesCollectionDirective> {\n    constructor();\n}\n"]}