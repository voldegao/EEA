{"version":3,"file":"stockevents.directive.d.ts","sources":["stockevents.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * StockEvents\n * ```html\n * <e-stockchart-stockevents>\n * <e-stockchart-stockevent></e-stockchart-stockevent>\n * </e-stockchart-stockevents>\n * ```\n */\nexport declare class StockEventDirective extends ComplexBase<StockEventDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * Specifies type of stock events\n     * * Circle\n     * * Square\n     * * Flag\n     * * Text\n     * * Sign\n     * * Triangle\n     * * InvertedTriangle\n     * * ArrowUp\n     * * ArrowDown\n     * * ArrowLeft\n     * * ArrowRight\n     * @default 'Circle'\n     */\n    type: any;\n    /**\n     * The background of the stock event that accepts value in hex and rgba as a valid CSS color string.\n     * @default 'transparent'\n     */\n    background: any;\n    /**\n     * Options to customize the border of the stock events.\n     */\n    border: any;\n    /**\n     * Date value of stock event in which stock event shows.\n     */\n    date: any;\n    /**\n     * Specifies the description for the chart which renders in tooltip for stock event.\n     */\n    description: any;\n    /**\n     * Corresponding values in which stock event placed.\n     * * Close\n     * * Open\n     * * High\n     * * Close\n     * @default 'close'\n     */\n    placeAt: any;\n    /**\n     * To render stock events in particular series.\n     * By default stock events will render for all series.\n     * @default []\n     */\n    seriesIndexes: any;\n    /**\n     * Enables the stock events to be render on series. If it disabled, stock event rendered on primaryXAxis.\n     * @default true\n     */\n    showOnSeries: any;\n    /**\n     * Specifies the text for the stock chart text.\n     */\n    text: any;\n    /**\n     * Options to customize the styles for stock events text.\n     */\n    textStyle: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * StockEvent Array Directive\n * @private\n */\nexport declare class StockEventsDirective extends ArrayBase<StockEventsDirective> {\n    constructor();\n}\n"]}