{"version":3,"file":"axes.directive.d.ts","sources":["axes.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * Axis Directive\n * ```html\n * <e-stockchart-axes><e-stockchart-axis></e-stockchart-axis></e-stockchart-axes>\n * ```\n */\nexport declare class StockChartAxisDirective extends ComplexBase<StockChartAxisDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * The polar radar radius position.\n     * @default 100\n     */\n    coefficient: any;\n    /**\n     * Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n     * @default null\n     */\n    crossesAt: any;\n    /**\n     * Specifies axis name with which the axis line has to be crossed\n     * @default null\n     */\n    crossesInAxis: any;\n    /**\n     * Options to customize the crosshair ToolTip.\n     */\n    crosshairTooltip: any;\n    /**\n     * Description for axis and its element.\n     * @default null\n     */\n    description: any;\n    /**\n     * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n     * @default null\n     * @aspdefaultvalueignore\n     */\n    desiredIntervals: any;\n    /**\n     * Specifies the position of labels at the edge of the axis.They are,\n     * * None: No action will be performed.\n     * * Hide: Edge label will be hidden.\n     * * Shift: Shifts the edge labels.\n     * @default 'None'\n     */\n    edgeLabelPlacement: any;\n    /**\n     * If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n     * @default true\n     */\n    enableAutoIntervalOnZooming: any;\n    /**\n     * Specifies the Trim property for an axis.\n     * @default false\n     */\n    enableTrim: any;\n    /**\n     * Specifies the interval for an axis.\n     * @default null\n     * @aspdefaultvalueignore\n     */\n    interval: any;\n    /**\n     * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n     * * Auto: Defines the interval of the axis based on data.\n     * * Years: Defines the interval of the axis in years.\n     * * Months: Defines the interval of the axis in months.\n     * * Days: Defines the interval of the axis in days.\n     * * Hours: Defines the interval of the axis in hours.\n     * * Minutes: Defines the interval of the axis in minutes.\n     * @default 'Auto'\n     */\n    intervalType: any;\n    /**\n     * It specifies whether the axis to be rendered in inversed manner or not.\n     * @default false\n     */\n    isInversed: any;\n    /**\n     * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n     * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n     * @default ''\n     */\n    labelFormat: any;\n    /**\n     * Specifies the actions like `Hide`, `Rotate45`, and `Rotate90` when the axis labels intersect with each other.They are,\n     * * None: Shows all the labels.\n     * * Hide: Hides the label when it intersects.\n     * * Rotate45: Rotates the label to 45 degree when it intersects.\n     * * Rotate90: Rotates the label to 90 degree when it intersects.\n     * @default Hide\n     */\n    labelIntersectAction: any;\n    /**\n     * Specifies the placement of a label for category axis. They are,\n     * * betweenTicks: Renders the label between the ticks.\n     * * onTicks: Renders the label on the ticks.\n     * @default 'BetweenTicks'\n     */\n    labelPlacement: any;\n    /**\n     * Specifies the placement of a labels to the axis line. They are,\n     * * inside: Renders the labels inside to the axis line.\n     * * outside: Renders the labels outside to the axis line.\n     * @default 'Outside'\n     */\n    labelPosition: any;\n    /**\n     * The angle to which the axis label gets rotated.\n     * @default 0\n     */\n    labelRotation: any;\n    /**\n     * Options to customize the axis label.\n     */\n    labelStyle: any;\n    /**\n     * Options for customizing axis lines.\n     */\n    lineStyle: any;\n    /**\n     * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n     * @default 10\n     */\n    logBase: any;\n    /**\n     * Options for customizing major grid lines.\n     */\n    majorGridLines: any;\n    /**\n     * Options for customizing major tick lines.\n     */\n    majorTickLines: any;\n    /**\n     * Specifies the maximum range of an axis.\n     * @default null\n     */\n    maximum: any;\n    /**\n     * Specifies the maximum width of an axis label.\n     * @default 34.\n     */\n    maximumLabelWidth: any;\n    /**\n     * The maximum number of label count per 100 pixels with respect to the axis length.\n     * @default 3\n     */\n    maximumLabels: any;\n    /**\n     * Specifies the minimum range of an axis.\n     * @default null\n     */\n    minimum: any;\n    /**\n     * Options for customizing minor grid lines.\n     */\n    minorGridLines: any;\n    /**\n     * Options for customizing minor tick lines.\n     */\n    minorTickLines: any;\n    /**\n     * Specifies the number of minor ticks per interval.\n     * @default 0\n     */\n    minorTicksPerInterval: any;\n    /**\n     * Unique identifier of an axis.\n     * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n     * @default ''\n     */\n    name: any;\n    /**\n     * If set to true, the axis will render at the opposite side of its default position.\n     * @default false\n     */\n    opposedPosition: any;\n    /**\n     * Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line\n     * @default true\n     */\n    placeNextToAxisLine: any;\n    /**\n     * Left and right padding for the plot area in pixels.\n     * @default 0\n     */\n    plotOffset: any;\n    /**\n     * Specifies the padding for the axis range in terms of interval.They are,\n     * * none: Padding cannot be applied to the axis.\n     * * normal: Padding is applied to the axis based on the range calculation.\n     * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n     * * round: Axis range is rounded to the nearest possible value divided by the interval.\n     * @default 'Auto'\n     */\n    rangePadding: any;\n    /**\n     * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`.\n     *\n     * @default 0\n     */\n    rowIndex: any;\n    /**\n     * Specifies the skeleton format in which the dateTime format will process.\n     * @default ''\n     */\n    skeleton: any;\n    /**\n     * It specifies the type of format to be used in dateTime format process.\n     * @default 'DateTime'\n     */\n    skeletonType: any;\n    /**\n     * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n     * @default 1\n     */\n    span: any;\n    /**\n     * The start angle for the series.\n     * @default 0\n     */\n    startAngle: any;\n    /**\n     * Specifies the stripLine collection for the axis\n     */\n    stripLines: any;\n    /**\n     * TabIndex value for the axis.\n     * @default 2\n     */\n    tabIndex: any;\n    /**\n     * Specifies the placement of a ticks to the axis line. They are,\n     * * inside: Renders the ticks inside to the axis line.\n     * * outside: Renders the ticks outside to the axis line.\n     * @default 'Outside'\n     */\n    tickPosition: any;\n    /**\n     * Specifies the title of an axis.\n     * @default ''\n     */\n    title: any;\n    /**\n     * Options for customizing the axis title.\n     */\n    titleStyle: any;\n    /**\n     * Specifies the type of data the axis is handling.\n     * * Double:  Renders a numeric axis.\n     * * DateTime: Renders a dateTime axis.\n     * * Category: Renders a category axis.\n     * * Logarithmic: Renders a log axis.\n     * @default 'Double'\n     * @blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n     * @isenumeration true\n     */\n    valueType: any;\n    /**\n     * If set to true, axis label will be visible.\n     * @default true\n     */\n    visible: any;\n    /**\n     * The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n     * @default 1\n     */\n    zoomFactor: any;\n    /**\n     * Position of the zoomed axis. Value ranges from 0 to 1.\n     * @default 0\n     */\n    zoomPosition: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * StockChartAxis Array Directive\n * @private\n */\nexport declare class StockChartAxesDirective extends ArrayBase<StockChartAxesDirective> {\n    constructor();\n}\n"]}