{"version":3,"file":"indicators.directive.d.ts","sources":["indicators.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * Indicator Directive\n * ```html\n * <e-stockchart-indicators>\n * <e-stockchart-indicator></e-stockchart-indicator>\n * </e-stockchart-indicators>\n * ```\n */\nexport declare class StockChartIndicatorDirective extends ComplexBase<StockChartIndicatorDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * Defines the type of the technical indicator\n     * @default 'Sma'\n     */\n    type: any;\n    /**\n     * Options to customizing animation for the series.\n     */\n    animation: any;\n    /**\n     * Options for customizing the BollingerBand in the indicator.\n     * @default 'rgba(211,211,211,0.25)'\n     */\n    bandColor: any;\n    /**\n     * The DataSource field that contains the close value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    close: any;\n    /**\n     * Defines the period, the price changes over which will define the %D value in stochastic indicators\n     * @default 3\n     */\n    dPeriod: any;\n    /**\n     * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n     * @default '0'\n     */\n    dashArray: any;\n    /**\n     * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n     *\n     * @default ''\n     */\n    dataSource: any;\n    /**\n     * Sets the fast period to define the Macd line\n     * @default 26\n     */\n    fastPeriod: any;\n    /**\n     * Defines the field to compare the current value with previous values\n     * @default 'Close'\n     */\n    field: any;\n    /**\n     * The fill color for the series that accepts value in hex and rgba as a valid CSS color string.\n     * It also represents the color of the signal lines in technical indicators.\n     * For technical indicators, the default value is 'blue' and for series, it has null.\n     * @default null\n     */\n    fill: any;\n    /**\n     * The DataSource field that contains the high value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    high: any;\n    /**\n     * Defines the look back period, the price changes over which will define the %K value in stochastic indicators\n     * @default 14\n     */\n    kPeriod: any;\n    /**\n     * The DataSource field that contains the low value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    low: any;\n    /**\n     * Defines the appearance of lower line in technical indicators\n     */\n    lowerLine: any;\n    /**\n     * Defines the appearance of the the MacdLine of Macd indicator\n     * @default { color: '#ff9933', width: 2 }\n     */\n    macdLine: any;\n    /**\n     * Defines the color of the negative bars in Macd indicators\n     * @default '#e74c3d'\n     */\n    macdNegativeColor: any;\n    /**\n     * Defines the color of the positive bars in Macd indicators\n     * @default '#2ecd71'\n     */\n    macdPositiveColor: any;\n    /**\n     * Defines the type of the Macd indicator.\n     * @default 'Both'\n     */\n    macdType: any;\n    /**\n     * The DataSource field that contains the open value of y\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    open: any;\n    /**\n     * Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators\n     * @default 80\n     */\n    overBought: any;\n    /**\n     * Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators\n     * @default 20\n     */\n    overSold: any;\n    /**\n     * Defines the period, the price changes over which will be considered to predict the trend\n     * @default 14\n     */\n    period: any;\n    /**\n     * Defines the appearance of period line in technical indicators\n     */\n    periodLine: any;\n    /**\n     * The DataSource field that contains the color value of point\n     * It is applicable for series\n     * @default ''\n     */\n    pointColorMapping: any;\n    /**\n     * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n     * @default null\n     */\n    query: any;\n    /**\n     * Defines the name of the series, the data of which has to be depicted as indicator\n     * @default ''\n     */\n    seriesName: any;\n    /**\n     * Enables/Disables the over-bought and over-sold regions\n     * @default true\n     */\n    showZones: any;\n    /**\n     * Sets the slow period to define the Macd line\n     * @default 12\n     */\n    slowPeriod: any;\n    /**\n     * Sets the standard deviation values that helps to define the upper and lower bollinger bands\n     * @default 2\n     */\n    standardDeviation: any;\n    /**\n     * Defines the appearance of the upper line in technical indicators\n     */\n    upperLine: any;\n    /**\n     * Defines the data source field that contains the volume value in candle charts\n     * It is applicable for financial series and technical indicators\n     * @default ''\n     */\n    volume: any;\n    /**\n     * The stroke width for the series that is applicable only for `Line` type series.\n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    width: any;\n    /**\n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart.\n     * It is applicable for series and technical indicators\n     *\n     * @default null\n     */\n    xAxisName: any;\n    /**\n     * The DataSource field that contains the x value.\n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    xName: any;\n    /**\n     * The name of the vertical axis associated with the series. It requires `axes` of the chart.\n     * It is applicable for series and technical indicators\n     *\n     * @default null\n     */\n    yAxisName: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * StockChartIndicator Array Directive\n * @private\n */\nexport declare class StockChartIndicatorsDirective extends ArrayBase<StockChartIndicatorsDirective> {\n    constructor();\n}\n"]}